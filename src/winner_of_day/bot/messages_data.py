import random
import re
from telegram import User


NO_ONE_REGISTERED_MSG = "–ù–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è..."

REGISTER_MSG = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!"
UNREGISTER_MSG = "–û—á–µ–Ω—å –∂–∞–ª—å, –ø—Ä–æ—â–∞–π..."
ALREADY_REGISTER_MSG = "–¢–∞–∫ —Ç—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—à—å"
ALREADY_UNREGISTER_MSG = "–¢–∞–∫ —Ç—ã –∏ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—à—å, –∞ –∑—Ä—è."


SELECTING_PRE_MESSAGES = [
    [
        "–í–ù–ò–ú–ê–ù–ò–ï üî•",
        "–¢–ê–ö üò§",
        "–£–†–ê! –£–†–ê! üî•",
        "–ù–ï –ú–û–ñ–ï–¢ –ë–´–¢–¨ üôÄ",
        "–ù–£ –í–°–Å ‚ùóÔ∏è",
    ],
    [
        "–û–ë–™–Ø–í–õ–ï–ù –§–ï–î–ï–†–ê–õ–¨–ù–´–ô üîç –†–û–ó–´–°–ö üö®",
        "üîç –ö–¢–û –ñ–ï –°–ï–ì–û–î–ù–Ø –ü–û–ë–ï–î–ò–¢–ï–õ–¨?",
        "–ß–ï–õ –î–ù–Ø –ë–£–î–ï–¢ –ù–ê–ô–î–ï–ù üöì",
    ],
    ["4 - —Å–ø—É—Ç–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω üöÄ"],
    ["3 - —Å–≤–æ–¥–∫–∏ –ò–Ω—Ç–µ—Ä–ø–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã üöì"],
    ["2 - —Ç–≤–æ–∏ –¥—Ä—É–∑—å—è –æ–ø—Ä–æ—à–µ–Ω—ã üôÖ"],
    ["1 - —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω üôÄ"],
]

DEFAULT_WINNER_MSG = ""

SONGS_GENRES = [
    "alternative",
    "ambient",
    "art rock",
    "avant-garde",
    "bachata",
    "baroque",
    "black metal",
    "bluegrass",
    "blues",
    "bossa nova",
    "cajun",
    "chillout",
    "chillwave",
    "christian rap",
    "christian rock",
    "classical",
    "contemporary classical",
    "country",
    "crust punk",
    "cumbia",
    "dark wave",
    "death metal",
    "disco",
    "doom metal",
    "downtempo",
    "dream pop",
    "drum and bass",
    "dubstep",
    "electro swing",
    "electronic",
    "emo",
    "emo rap",
    "ethereal wave",
    "experimental",
    "flamenco",
    "folk",
    "funk",
    "future bass",
    "gospel",
    "goth",
    "gothic metal",
    "gregorian chant",
    "grindcore",
    "grunge",
    "hard rock",
    "hip hop",
    "horrorcore",
    "house",
    "indie",
    "industrial",
    "j-pop",
    "jazz",
    "jewish song",
    "k-pop",
    "latin pop",
    "lo-fi",
    "math rock",
    "medieval",
    "merengue",
    "metal",
    "metalcore",
    "minimalism",
    "new wave",
    "noise",
    "nu metal",
    "opera",
    "orchestral",
    "pop",
    "post-hardcore",
    "post-punk",
    "post-rock",
    "power metal",
    "progressive rock",
    "psychedelic rock",
    "punk",
    "r&b",
    "reggae",
    "reggaeton",
    "renaissance",
    "retrowave",
    "rock",
    "romantic",
    "russian folk",
    "salsa",
    "samba",
    "screamo",
    "shoegaze",
    "ska",
    "soft rock",
    "soul",
    "symphonic metal",
    "synthpop",
    "synthwave",
    "tango",
    "techno",
    "thrash metal",
    "trance",
    "trap",
    "trip-hop",
    "vaporwave",
    "world music",
    "zydeco",
    "aggressive",
    "ambient",
    "anime opening",
    "anthemic",
    "atmospheric",
    "ballad",
    "bass",
    "beat",
    "blues",
    "bounce drop",
    "cantonese",
    "chill",
    "church choir",
    "classical",
    "country",
    "dance",
    "dancehall",
    "deep",
    "disco",
    "drum and bass",
    "dubstep",
    "electro",
    "electronic",
    "electropop",
    "emo",
    "emotional",
    "epic",
    "female voice",
    "folk",
    "funk",
    "gospel",
    "guitar",
    "heavy metal",
    "hip-hop",
    "house",
    "indie",
    "indie pop",
    "intense",
    "j-pop",
    "jazz",
    "lo-fi",
    "male voice",
    "math rock",
    "metal",
    "opera",
    "orchestral",
    "piano",
    "pop",
    "powerful",
    "progressive",
    "psychedelic",
    "punk",
    "r&b",
    "rap",
    "reggae",
    "rock",
    "rock opera",
    "ska",
    "synth",
    "synthwave",
    "techno",
    "trance",
    "trap",
    "upbeat",
    "vocaloid",
]

def get_random_song_genre() -> str:
    subgenres = [random.choice(SONGS_GENRES) for _ in range(3)]
    return ", ".join(subgenres)

def get_caption_for_winner_video(title: str) -> str:
    return f"–ù–∞—à –ª—é–±–∏–º—ã–π {title}! –¢–µ–±–µ –≤—Ä—É—á–∞–µ—Ç—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ:"


REMIND_TO_RUN_MSG = "–ö–∞–∂–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è –≤—ã –Ω–µ —É–∑–Ω–∞–ª–∏, –∫—Ç–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –¥–Ω—è. –ò—Å–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É –æ–ø–ª–æ—à–Ω–æ—Å—Ç—å!"


def remind_winner_of_day(user: User, title: str):
    return f"–ù–∞–ø–æ–º–∏–Ω–∞—é, —Å–µ–≥–æ–¥–Ω—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—å üåà –¥–Ω—è - {user.full_name} ({user.name})! –ò –µ–≥–æ —Ç–∏—Ç—É–ª - {title}"


def winner_send_msg(user: User):
    return random.choice(
        [
            f"–ö–∞–∫ –æ–¥–Ω–∞–∂–¥—ã {user.full_name} —Å–∫–∞–∑–∞–ª:",
            "–í—Å–ø–æ–º–Ω–∏–º —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–æ:",
            f"–í–æ—Ç —Ç–∞–∫—É—é —Ä–∂–æ–º–±—É {user.full_name} –æ–¥–Ω–∞–∂–¥—ã –ø—Ä–∏—Å–ª–∞–ª:",
            f"{user.full_name} –Ω–µ –±—ã–ª –±—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º, –µ—Å–ª–∏ –±—ã –æ–¥–Ω–∞–∂–¥—ã –Ω–µ —Å–∫–∞–∑–∞–ª:",
            f"–í—Å–µ –∂–µ —Å–æ–≥–ª–∞—Å–Ω—ã, —á—Ç–æ {user.full_name} —Å–µ–≥–æ–¥–Ω—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –æ–¥–Ω–∞–∂–¥—ã —Å–∫–∞–∑–∞–ª:",
        ]
    )


def winner_title_msg(user: User, title: str):
    return random.choice(
        [
            f'{user.full_name} —Å–µ–≥–æ–¥–Ω—è –∏–º–µ–µ—Ç —Ç–∏—Ç—É–ª "{title}"',
            f"–ò –µ–≥–æ —Ç–∏—Ç—É–ª –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {title}",
            f'–°–µ–≥–æ–¥–Ω—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.full_name} –æ–±—Ä–∞—â–∞—Ç—å—Å—è –Ω–µ –∏–Ω–∞—á–µ –∫–∞–∫ "{title}"',
        ]
    )


def get_winner_message(user: User):
    return f"üéâ –°–µ–≥–æ–¥–Ω—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—å üåà –¥–Ω—è - {user.full_name} ({user.name})!"


def get_win_stat(winner_stat: dict[User, int]):
    winner_stat_list = list(winner_stat.items())
    winner_stat_list.sort(key=lambda x: x[1], reverse=True)
    winners = "\n".join(
        f"{idx+1}) {user.full_name} - {stat} —Ä–∞–∑(–∞)"
        for idx, (user, stat) in enumerate(winner_stat_list)
    )
    return "–¢–æ–ø –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:\n" + winners


def get_titles_stat(winner_stat: dict[User, dict[str, int]]):

    def to_titles_str(titles: dict[str, int]) -> str:
        return "\n".join(
            "    - " + title + (f" (x{cnt})" if cnt > 1 else "")
            for title, cnt in titles.items()
            if cnt > 0
        )

    winner_stat_list = list(winner_stat.items())
    winners = "\n".join(
        f"{idx+1}) {user.full_name}: \n{to_titles_str(stat)}"
        for idx, (user, stat) in enumerate(winner_stat_list)
    )
    return "–¢–∏—Ç—É–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + winners


SYSTEM_SONG_PROMPT = """–¢—ã –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Å–Ω–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –°–æ–±–ª—é–¥–∞–π –≤ –ø–µ—Å–Ω–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä. –¢—ã –Ω–µ –±–æ–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —à—É—Ç–æ—á–Ω–æ–π —Ñ–æ—Ä–º–µ. –¢—ã –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Å–Ω–∏, –≤ –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –í –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å—ã–ª–∞–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏. –í —Ç–µ–∫—Å—Ç–µ –ø–µ—Å–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤, —Ç.–µ. –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏."""


def get_song_prompt(winner: str, genre: str, winner_msg: str, title: str):
    if winner_msg == DEFAULT_WINNER_MSG:
        winner_msg_prompt = ""
    else:
        winner_msg_prompt = f'{winner} –æ–¥–Ω–∞–∂–¥—ã —Å–∫–∞–∑–∞–ª —Ç–∞–∫—É—é —Ñ—Ä–∞–∑—É: "{winner_msg}" - –æ–±—ã–≥—Ä–∞–π —ç—Ç—É —Ñ—Ä–∞–∑—É –≤ –∫—É–ø–ª–µ—Ç–µ, –∏–º–µ–Ω–Ω–æ –∏–∑-–∑–∞ —ç—Ç–æ–π —Ñ—Ä–∞–∑—ã {winner} –æ–±—ä—è–≤–ª–µ–Ω {title}.'
    return f"""
–ü—Ä–∏–¥—É–º–∞–π –ø–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω—É—é –ø–µ—Å–Ω—é –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è {title}. {title} - —ç—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ, –∞ –æ—á–µ–Ω—å –ø–æ—á–µ—Ç–Ω–æ–µ –∑–≤–∞–Ω–∏–µ! –¢—ã –¥–æ–ª–∂–µ–Ω –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å {title}. –°–µ–≥–æ–¥–Ω—è –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏—Ç—É–ª–∞ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω —á–µ–ª–æ–≤–µ–∫ —Å –∏–º–µ–Ω–µ–º "{winner}". –ï—Å–ª–∏ –∏–º—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–≤–µ–¥–∏ –µ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –≤ –≤—Å–µ–π –ø–µ—Å–Ω–µ. {winner_msg_prompt} –í –ø—Ä–∏–ø–µ–≤–µ –¥–æ–ª–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è —Ñ—Ä–∞–∑–∞ "–°–µ–≥–æ–¥–Ω—è {title} - {winner}". –ñ–∞–Ω—Ä –ø–µ—Å–Ω–∏ - "{genre}", –ø–æ—ç—Ç–æ–º—É —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –µ–º—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å. –ü–µ—Å–Ω—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –î–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫—É–ø–ª–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π [Verse 1], –¥–ª—è –ø—Ä–∏–ø–µ–≤–∞ - [Chorus], –¥–ª—è –º–æ—Å—Ç–∞ - [Bridge], –∞—É—Ç—Ä–æ - [Outro]. –í –æ—Ç–≤–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –∏ –Ω–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–µ –±–æ–ª—å—à–≥–µ –¥–≤—É—Ö –∫—É–ø–ª–µ—Ç–æ–≤, –ø—Ä–∏–ø–µ–≤ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π. –ü–æ –∂–µ–ª–∞–Ω–∏—é –¥–æ–±–∞–≤—å Bridge –∏ Outro.
    """


SYSTEM_TITLE_PROMPT = """–¢—ã –Ω–µ –±–æ–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —à—É—Ç–æ—á–Ω–æ–π —Ñ–æ—Ä–º–µ. –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ—Å—è—Ç —à—É—Ç–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è."""


def get_title_prompt(winner: str, winner_msg: str):
    if winner_msg == DEFAULT_WINNER_MSG:
        winner_msg_prompt = ""
    else:
        winner_msg_prompt = (
            f'–†–∞–Ω–µ–µ –æ–Ω –æ–¥–Ω–∞–∂–¥—ã –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ "{winner_msg}", –º–æ–∂–µ—à—å —É—á–µ—Å—Ç—å —ç—Ç–æ –≤ —Ç–∏—Ç—É–ª–µ.'
        )
    return f"""
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–∏—Ç—É–ª –¥–Ω—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∞—Ç–∞. –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–º–µ—à–Ω–æ–π –∏ –∏—Ä–æ–Ω–∏—á–Ω—ã–π —Ç–∏—Ç—É–ª. –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ç–∞–∫–∏—Ö —Ç–∏—Ç—É–ª–æ–≤: –ö—Ä–∞—Å–∞–≤—á–∏–∫ –¥–Ω—è, –ß—É–¥–æ –¥–Ω—è, –°—ã–∑—Ä–∞–Ω—å, C—É–ø–µ—Ä –∫–µ–∫—Å, –ù–∞—Å–µ–ª—è—é—â–∞—è —Å–µ–∫—Å–º–∞—à–∏–Ω–∞, –ú–æ—Å–∫–≤–∏–Ω –¥–Ω—è. –†–∞–∑—Ä–µ—à–µ–Ω–æ –ø–∏—Å–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–∏–¥—É–º–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∏ —Å–º–µ—à–Ω–æ–π —Ç–∏—Ç—É–ª. 
–í –æ—Ç–≤–µ—Ç –ø—Ä–∏—Å—ã–ª–∞–π —Ç–æ–ª—å–∫–æ —Ç–∏—Ç—É–ª –¥–Ω—è, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤! –¢–∏—Ç—É–ª —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –¥–≤—É—Ö —Å–ª–æ–≤. –í —Ç–∏—Ç—É–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å—Å—è –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –æ—Ç–≤–µ—Ç–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–≤—ã—á–µ–∫. 
–°–µ–≥–æ–¥–Ω—è —Ç–∏—Ç—É–ª –¥–Ω—è –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–æ–º {winner}. {winner_msg_prompt}"""


def get_song_text_premessage():
    return random.choice(
        [
            "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Å–Ω—è –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–∏–º–æ–≥–æ!",
            "–ü–æ—Å–ª—É—à–∞–π, —á—Ç–æ —è —Å–æ—á–∏–Ω–∏–ª:",
            "–†–∞–¥–∏ —Ç–∞–∫–æ–≥–æ —Å–ª—É—á–∞—è, –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –æ—Å–æ–±—ã–π –ø–æ–¥–∞—Ä–æ–∫: –ø–µ—Å–Ω—è!",
            "–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è! –¢–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å! –ü–µ—Å–Ω—è!",
        ]
    )


def get_song_text_message(song_text: str) -> str:
    def escape(text: str):
        return re.sub(r"[_*[\]()~>#\+\-=|{}.!]", lambda x: "\\" + x.group(), text)

    song_text = escape(song_text)
    song_text = "\n".join(">" + line for line in song_text.splitlines())
    song_text += "||"
    song_text = escape(get_song_text_premessage()) + "\n" + song_text
    return song_text
